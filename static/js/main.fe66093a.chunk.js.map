{"version":3,"sources":["components/Header.tsx","context/AppReducer.tsx","context/GlobalState.tsx","components/Balance.tsx","components/IncomeExpenses.tsx","components/Transaction.tsx","context/ActionCreator.tsx","components/TransactionList.tsx","services/FormInputHooks.tsx","components/AddTransaction.tsx","App.tsx","index.tsx"],"names":["Header","title","AppReducer","state","action","type","transactions","filter","transaction","id","payload","InitialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","borderClass","Math","abs","onClick","deleteTransaction","TransactionList","key","useInput","initialValue","useState","setValue","onChange","e","target","AddTransaction","bindText","resetText","bindAmount","resetAmount","handleFormReset","onSubmit","preventDefault","newTransaction","addTransaction","length","htmlFor","placeholder","style","background","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe66093a.chunk.js","sourcesContent":["import React from \"react\";\n\n// Props Type\ntype HeaderProps = {\n    title: string;\n};\n\nexport const Header: React.FC<HeaderProps> = ({ title }) => {\n    return <h2>{title}</h2>;\n};\n\nexport default Header;\n","// Types Import\nimport { IGlobalState, ITransaction } from \"./GlobalState\";\n\n// Custom Action Types\nexport type ACTIONTYPE =\n    | { type: \"DELETE_TRANSACTION\"; payload: number }\n    | { type: \"ADD_TRANSACTION\"; payload: ITransaction };\n\n// Transaction Reducer\nconst AppReducer = (state: IGlobalState, action: ACTIONTYPE) => {\n    switch (action.type) {\n        case \"DELETE_TRANSACTION\":\n            return {\n                ...state,\n                transactions: state.transactions.filter(\n                    transaction => transaction.id !== action.payload\n                )\n            };\n        case \"ADD_TRANSACTION\":\n            return {\n                ...state,\n                transactions: [...state.transactions, action.payload]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default AppReducer;\n","import React, { createContext, useReducer } from \"react\";\nimport { ACTIONTYPE } from \"./AppReducer\";\n\nimport AppReducer from \"./AppReducer\";\n\n// Transaction Types\nexport interface ITransaction {\n    id: number;\n    text: string;\n    amount: number;\n}\n\n// Global Props and dispatch for Context Apis\nexport interface IGlobalState {\n    transactions: Array<ITransaction>;\n    dispatch?: React.Dispatch<ACTIONTYPE>;\n}\n\n// Props Type For Component With Child Props\ninterface IChildComponent {\n    children: React.ReactNode;\n}\n\n// Initial State\nconst InitialState: IGlobalState = {\n    transactions: [\n        {\n            id: 1,\n            text: \"Flower\",\n            amount: -20\n        },\n        {\n            id: 2,\n            text: \"Salary\",\n            amount: 300\n        },\n        {\n            id: 3,\n            text: \"Book\",\n            amount: -10\n        },\n        {\n            id: 4,\n            text: \"Camera\",\n            amount: 150\n        }\n    ]\n};\n\n// Create Context\nexport const GlobalContext = createContext<IGlobalState>(InitialState);\n\n// Provider Component Rendering Childern Component\nexport const GlobalProvider: React.FC<IChildComponent> = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, InitialState);\n\n    return (\n        <GlobalContext.Provider\n            value={{ transactions: state.transactions, dispatch: dispatch }}\n        >\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n","import React, { useContext } from \"react\";\n\n// Types\nimport { IGlobalState } from \"../context/GlobalState\";\n\n// State Context\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Balance: React.FC = () => {\n    const { transactions } = useContext<IGlobalState>(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1> ${total}</h1>\n        </>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext, IGlobalState } from \"../context/GlobalState\";\n\nexport const IncomeExpenses: React.FC = () => {\n    const { transactions } = useContext<IGlobalState>(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n\n    const income = amounts\n        .filter(amount => amount > 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n\n    const expense =\n        amounts\n            .filter(amount => amount < 0)\n            .reduce((acc, item) => (acc += item), 0) * -(1).toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p className=\"money plus\">${income}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p className=\"money minus\">${expense}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default IncomeExpenses;\n","import React, { useContext } from \"react\";\n\n// Types\nimport { ITransaction, IGlobalState } from \"../context/GlobalState\";\n\n// State Context\nimport { GlobalContext } from \"../context/GlobalState\";\n\n// Action Creators\nimport { deleteTransaction } from \"../context/ActionCreator\";\n\nconst Transaction: React.FC<ITransaction> = ({ amount, id, text }) => {\n    const sign = amount < 0 ? \"-\" : \"+\";\n    const borderClass = amount < 0 ? \"minus\" : \"plus\";\n\n    const { dispatch } = useContext<IGlobalState>(GlobalContext);\n\n    return (\n        <div>\n            <li className={borderClass}>\n                {text}{\" \"}\n                <span>\n                    {sign}${Math.abs(amount)}\n                </span>\n                <button\n                    className=\"delete-btn\"\n                    onClick={() => deleteTransaction(id, dispatch)}\n                >\n                    X\n                </button>\n            </li>\n        </div>\n    );\n};\n\nexport default Transaction;\n","// Types\nimport { ITransaction } from \"./GlobalState\";\n\nexport function deleteTransaction(id: number, dispatch: any): void {\n    dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id\n    });\n    return;\n}\n\nexport function addTransaction(\n    newTransaction: ITransaction,\n    dispatch: any\n): void {\n    dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: newTransaction\n    });\n\n    return;\n}\n","import React, { useContext } from \"react\";\n\n// Component\nimport Transaction from \"./Transaction\";\n\n// Types\nimport { IGlobalState } from \"../context/GlobalState\";\n\n// State Context\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const TransactionList: React.FC = () => {\n    const { transactions } = useContext<IGlobalState>(GlobalContext);\n\n    return (\n        <>\n            <h3>History</h3>\n            <ul className=\"list\">\n                {transactions.map(transaction => (\n                    <Transaction {...transaction} key={transaction.id} />\n                ))}\n            </ul>\n        </>\n    );\n};\n","import { useState, ChangeEventHandler } from \"react\";\n\ninterface ResetFunction {\n    (): void;\n}\n\n// Generic Interface to return the value and onChange handler for button\ninterface Bind<T> {\n    value: T;\n    onChange: ChangeEventHandler<any>;\n}\n\n// Custom Hook\nexport function useInput<T>(initialValue: T): [T, Bind<T>, ResetFunction] {\n    const [value, setValue] = useState<T>(initialValue);\n\n    const reset = () => {\n        setValue(initialValue);\n    };\n\n    const bind: Bind<T> = {\n        value,\n        onChange: e => {\n            setValue(e.target.value);\n        }\n    };\n\n    return [value, bind, reset];\n}\n","import React, { useContext } from \"react\";\n\n// Custom Hooks\nimport { useInput } from \"../services/FormInputHooks\";\n\n// Types\nimport { IGlobalState } from \"../context/GlobalState\";\n\n// State Context\nimport { GlobalContext } from \"../context/GlobalState\";\n\n// Action Creator\nimport { addTransaction } from \"../context/ActionCreator\";\n\nexport const AddTransaction: React.FC = () => {\n    // States\n    const [text, bindText, resetText] = useInput<string>(\"\");\n    const [amount, bindAmount, resetAmount] = useInput<number>(0.0);\n\n    // GLobal States\n    const { transactions, dispatch } = useContext<IGlobalState>(GlobalContext);\n\n    const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        // Add new transaction to the global state\n        addTransaction(\n            {\n                id: transactions.length + 1,\n                amount: +amount,\n                text\n            },\n            dispatch\n        );\n\n        // Clear the form\n        handleFormReset();\n    };\n\n    const handleFormReset = () => {\n        resetText();\n        resetAmount();\n    };\n\n    return (\n        <>\n            <h3>Add new transaction</h3>\n            <form onSubmit={handleFormSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\">Text</label>\n                    <input\n                        type=\"text\"\n                        {...bindText}\n                        placeholder=\"Enter text..\"\n                    />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"amount\">\n                        Amount <br />\n                        (negative - expense, positive - income)\n                    </label>\n                    <input\n                        type=\"number\"\n                        {...bindAmount}\n                        placeholder=\"Enter amount..\"\n                    />\n                </div>\n                <div>\n                    <button className=\"btn\"> Add Transaction</button>\n                    <button\n                        className=\"btn\"\n                        type=\"button\"\n                        onClick={() => handleFormReset()}\n                        style={{ background: \"red\" }}\n                    >\n                        {\" \"}\n                        Clear\n                    </button>\n                </div>\n            </form>\n        </>\n    );\n};\n\nexport default AddTransaction;\n","import React from \"react\";\n\nimport { Header } from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <GlobalProvider>\n            <Header title=\"Expense Tracker App\" />\n            <div className=\"container\">\n                <Balance />\n                <IncomeExpenses />\n                <TransactionList />\n                <AddTransaction />\n            </div>\n        </GlobalProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}